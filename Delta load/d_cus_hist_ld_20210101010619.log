d_cus_hist_ld 01/01/2021 01:06:19: Getting Module Type from DWH_C_BATCH_SCRIPTS
Start:************************
query_command : SELECT MODULE_TYP FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_SCRIPTS WHERE LOWER(SCRIPT_NAME)=LOWER('d_cus_hist_ld')
END:************************

d_cus_hist_ld 01/01/2021 01:06:19: The current Module Type is : NTLY

d_cus_hist_ld 01/01/2021 01:06:19: Getting Module Load Type from DWH_C_BATCH_SCRIPTS
Start:************************
query_command : SELECT MODULE_LOAD_TYP FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_SCRIPTS WHERE LOWER(SCRIPT_NAME)=LOWER('d_cus_hist_ld')
END:************************

d_cus_hist_ld 01/01/2021 01:06:19: The current Module Load Type is : NA
d_cus_hist_ld 01/01/2021 01:06:19: Getting Batch ID from DWH_C_BATCH_LOG
Start:************************
query_command : SELECT CAST(COALESCE(MAX(BATCH_ID),0) AS VARCHAR(20) ) FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_LOG WHERE MODULE_NAME='NTLY'
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: The current Batch ID is : 1540

d_cus_hist_ld 01/01/2021 01:06:20: Getting Job Id from DWH_C_BATCH_SCRIPTS
Start:************************
query_command : SELECT TRIM(JOB_ID) FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_SCRIPTS WHERE LOWER(SCRIPT_NAME)=LOWER('d_cus_hist_ld')
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: The current Job ID is : 506

d_cus_hist_ld 01/01/2021 01:06:20: Getting bookmark from DWH_C_BATCH_LOG table
Start:************************
query_command : SELECT BOOKMARK FROM
						(SELECT BOOKMARK,ROW_NUMBER() OVER (PARTITION BY JOB_NAME,BATCH_ID ORDER BY START_TIMESTAMP DESC,JOB_ID DESC) RNK FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_LOG
							WHERE  JOB_NAME = 'd_cus_hist_ld'
							AND BATCH_ID = 1540
							AND STATUS='RESTART') AA
						WHERE RNK=1
							
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: The bookmark is : NONE
d_cus_hist_ld 01/01/2021 01:06:20: Checking for run-ability of the job for the batch
Start:************************
query_command : SELECT 1 FROM EXPDW_ETE_DWH_V.V_DWH_C_BATCH_LOG
						WHERE  JOB_NAME = 'd_cus_hist_ld'
								AND BATCH_ID = 1540
								AND STATUS IN ('COMPLETE','ERROR')
						
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: Job ready for the run for the batch


==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = NONE  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:06:20: Getting Current Date
Start:************************
query_command : SELECT PARAM_VALUE FROM EXPDW_ETE_DWH_V.V_DWH_C_PARAM WHERE  PARAM_NAME='BUSINESS_DATE'
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: Current date for the job = 2020-12-30

d_cus_hist_ld 01/01/2021 01:06:20: Getting load mode for the job
Start:************************
query_command : SELECT PARAM_VALUE FROM EXPDW_ETE_DWH_V.V_DWH_C_PARAM WHERE PARAM_NAME='Insert Mode'
END:************************

d_cus_hist_ld 01/01/2021 01:06:20: The load mode for the job = Full

d_cus_hist_ld 01/01/2021 01:06:20: Getting primary currency for the job
Start:************************
query_command : SELECT PARAM_VALUE FROM EXPDW_ETE_DWH_V.V_DWH_C_PARAM WHERE PARAM_NAME='Primary Currency'
END:************************

d_cus_hist_ld 01/01/2021 01:06:21: The primary currency for the job = USD

d_cus_hist_ld 01/01/2021 01:06:21: d_cus_hist_ld Started
d_cus_hist_ld 01/01/2021 01:06:21: Getting current time-stamp for the job execution
Start:************************
query_command : SELECT CAST(CURRENT_TIMESTAMP AS TIMESTAMP(6))
END:************************

d_cus_hist_ld 01/01/2021 01:06:21: The current time-stamp of the job = 2021-01-01 01:06:21.230000

d_cus_hist_ld 01/01/2021 01:06:21: Inserting batch log
Start:************************
query_command : INSERT INTO EXPDW_ETE_DWH.DWH_C_BATCH_LOG (
                        BATCH_ID 
    				   ,JOB_ID
    				   ,MODULE_NAME
    				   ,JOB_NAME
    				   ,BUSINESS_DATE
    				   ,START_TIMESTAMP
    				   ,END_TIMESTAMP
    				   ,STATUS
    				   ,ERROR_DETAIL
    				   ,BOOKMARK
    				   ,LOGFILE)
                   SELECT 1540
                         ,506
                         ,'NTLY'
                        ,'d_cus_hist_ld'
    					 ,'2020-12-30'
                         ,'2021-01-01 01:06:21.230000'
                         ,CAST('9999-09-09' AS DATE FORMAT 'YYYY-MM-DD')
                         ,'RUNNING'
                         ,'RUNNING'
                         ,'NONE'
                         ,'/batch/ete/log/d_cus_hist_ld_20210101010619.log'
                   
END:************************

d_cus_hist_ld 01/01/2021 01:06:21: Load into Temporary Table Started
d_cus_hist_ld 01/01/2021 01:06:21: Truncate Temporary Table
d_cus_hist_ld 01/01/2021 01:06:21: Truncating table TMP_D_CUS_HIST_LU
Start:************************
query_command : DELETE FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU ALL
END:************************

d_cus_hist_ld 01/01/2021 01:06:21: TMP_D_CUS_HIST_LU truncated successfully
d_cus_hist_ld 01/01/2021 01:06:21: Loading TMP_D_CUS_HIST_LU
Start:************************
query_command : 
	INSERT INTO EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU
				( CUS_KEY
				,CUS_ID, HHLD_HIST_KEY, FIRST_NAME, FIRST_NAME_SCRBD, LAST_NAME, LAST_NAME_SCRBD, ADDRESS1, ADDRESS1_SCRBD, ADDRESS2, ADDRESS2_SCRBD, CITY, CITY_SCRBD, STATE_CDE, STATE_SCRBD, ZIP_CDE, ZIP_CODE_SCRBD, ZIP4_CDE, ZIP4_CODE_SCRBD, ZIP_FULL_CDE_SCRBD, NON_US_POSTAL_CDE, COUNTRY_CDE, COUNTRY_CDE_SCRBD, NON_US_CUS_FLG, IS_ADDRESS_VALID_FLG, IS_ADDRESS_LIKELY_VALID_FLG, IS_EMAIL_VALID_FLG, IS_PHONE_FOR_SMS_VALID_FLG, PHONE_NUM, PHONE_TYP, EMAIL_ADDRESS, GENDER_CDE, DIRECT_MAIL_CONSENT_FLG, EMAIL_CONSENT_FLG, SMS_CONSENT_FLG, BIRTH_DT, AGE, AGE_GRP_CDE, AGE_QUALIFIER, DECEASED_FLG, ADDRESS_IS_PRISON_FLG, ADD_DT, INTRODCTN_DT, LATITUDE, LONGITUDE, CLOSEST_LOC_KEY, DIST_TO_CLOSEST_LOC, SECOND_CLOSEST_LOC_KEY, DIST_TO_SEC_CLOSEST_LOC, PREFERRED_LOC_KEY, DIST_TO_PREFERRED_LOC, FIRST_TXN_DT, FIRST_TXN_LOC_KEY, BRAND_FIRST_TXN_DT, ADS_DONOT_STATMNT_INS_IND, ADS_DONOT_SELL_NAME_IND, ADS_SPAM_IND, ADS_EMAIL_CHANGE_DT, ADS_RTRN_MAIL_FLG, IS_DM_MARKETABLE_FLG, IS_EM_MARKETABLE_FLG, IS_SMS_MARKETABLE_FLG, RCD_TYP, EMAIL_CONSENT_DT, SMS_CONSENT_DT, DIRECT_MAIL_CONSENT_DT, LYLTY_ID, HAS_PLCC_FLG, IS_LYLTY_MEMBER_FLG, IS_ALIST_FLG, LYLTY_TIER, LYLTY_MEMBER_STTS, LYLTY_ACCT_OPEN_DT, LYLTY_ACCT_CLOSE_DT, LYLTY_ACCT_ENROLL_DT, NEXT_CONVRSN_STTS, NCOA_LAST_CNG_DT, LYLTY_ENRLMNT_LOC_KEY, LYLTY_ENRLMNT_SRC_KEY, PLCC_OPEN_DT, PLCC_CLOSE_DT
				,RCD_CLOSE_FLG
				,EFF_FROM_DT
				,EFF_TO_DT
				)
	SELECT CUS_KEY
		,CUS_ID, HHLD_HIST_KEY, FIRST_NAME, FIRST_NAME_SCRBD, LAST_NAME, LAST_NAME_SCRBD, ADDRESS1, ADDRESS1_SCRBD, ADDRESS2, ADDRESS2_SCRBD, CITY, CITY_SCRBD, STATE_CDE, STATE_SCRBD, ZIP_CDE, ZIP_CODE_SCRBD, ZIP4_CDE, ZIP4_CODE_SCRBD, ZIP_FULL_CDE_SCRBD, NON_US_POSTAL_CDE, COUNTRY_CDE, COUNTRY_CDE_SCRBD, NON_US_CUS_FLG, IS_ADDRESS_VALID_FLG, IS_ADDRESS_LIKELY_VALID_FLG, IS_EMAIL_VALID_FLG, IS_PHONE_FOR_SMS_VALID_FLG, PHONE_NUM, PHONE_TYP, EMAIL_ADDRESS, GENDER_CDE, DIRECT_MAIL_CONSENT_FLG, EMAIL_CONSENT_FLG, SMS_CONSENT_FLG, BIRTH_DT, AGE, AGE_GRP_CDE, AGE_QUALIFIER, DECEASED_FLG, ADDRESS_IS_PRISON_FLG, ADD_DT, INTRODCTN_DT, LATITUDE, LONGITUDE, CLOSEST_LOC_KEY, DIST_TO_CLOSEST_LOC, SECOND_CLOSEST_LOC_KEY, DIST_TO_SEC_CLOSEST_LOC, PREFERRED_LOC_KEY, DIST_TO_PREFERRED_LOC, FIRST_TXN_DT, FIRST_TXN_LOC_KEY, BRAND_FIRST_TXN_DT, ADS_DONOT_STATMNT_INS_IND, ADS_DONOT_SELL_NAME_IND, ADS_SPAM_IND, ADS_EMAIL_CHANGE_DT, ADS_RTRN_MAIL_FLG, IS_DM_MARKETABLE_FLG, IS_EM_MARKETABLE_FLG, IS_SMS_MARKETABLE_FLG, RCD_TYP, EMAIL_CONSENT_DT, SMS_CONSENT_DT, DIRECT_MAIL_CONSENT_DT, LYLTY_ID, HAS_PLCC_FLG, IS_LYLTY_MEMBER_FLG, IS_ALIST_FLG, LYLTY_TIER, LYLTY_MEMBER_STTS, LYLTY_ACCT_OPEN_DT, LYLTY_ACCT_CLOSE_DT, LYLTY_ACCT_ENROLL_DT, NEXT_CONVRSN_STTS, NCOA_LAST_CNG_DT, LYLTY_ENRLMNT_LOC_KEY, LYLTY_ENRLMNT_SRC_KEY, PLCC_OPEN_DT, PLCC_CLOSE_DT
		,CASE
			WHEN END(SRC.PD)=CAST('9999-12-31' AS DATE FORMAT 'YYYY-MM-DD')
				THEN 0
			ELSE 
				1
		END RCD_CLOSE_FLG
		,BEGIN(SRC.PD) EFF_FROM_DT
		,CASE
			WHEN RCD_CLOSE_FLG=1
				THEN END(SRC.PD)-1
			ELSE 
				END(SRC.PD)
		END EFF_TO_DT
	FROM (
		SELECT NORMALIZE CUS.CUS_KEY
			,A.CUS_ID
			,A.HHLD_HIST_KEY
			,A.FIRST_NAME
			,A.FIRST_NAME_SCRBD
			,A.LAST_NAME
			,A.LAST_NAME_SCRBD
			,A.ADDRESS1
			,A.ADDRESS1_SCRBD
			,A.ADDRESS2
			,A.ADDRESS2_SCRBD
			,A.CITY
			,A.CITY_SCRBD
			,A.STATE_CDE
			,A.STATE_SCRBD
			,A.ZIP_CDE
			,A.ZIP_CODE_SCRBD
			,A.ZIP4_CDE
			,A.ZIP4_CODE_SCRBD
			,A.ZIP_FULL_CDE_SCRBD
			,A.NON_US_POSTAL_CDE
			,A.COUNTRY_CDE
			,A.COUNTRY_CDE_SCRBD
			,A.NON_US_CUS_FLG
			,A.IS_ADDRESS_VALID_FLG
			,A.IS_ADDRESS_LIKELY_VALID_FLG
			,A.IS_EMAIL_VALID_FLG
			,A.IS_PHONE_FOR_SMS_VALID_FLG
			,A.PHONE_NUM
			,A.PHONE_TYP
			,A.EMAIL_ADDRESS
			,A.GENDER_CDE
			,A.DIRECT_MAIL_CONSENT_FLG
			,A.EMAIL_CONSENT_FLG
			,A.SMS_CONSENT_FLG
			,A.BIRTH_DT
			,A.AGE
			,A.AGE_GRP_CDE
			,A.AGE_QUALIFIER
			,A.DECEASED_FLG
			,A.ADDRESS_IS_PRISON_FLG
			,A.ADD_DT
			,A.INTRODCTN_DT
			,A.LATITUDE
			,A.LONGITUDE
			,A.CLOSEST_LOC_KEY
			,A.DIST_TO_CLOSEST_LOC
			,A.SECOND_CLOSEST_LOC_KEY
			,A.DIST_TO_SEC_CLOSEST_LOC
			,A.PREFERRED_LOC_KEY
			,A.DIST_TO_PREFERRED_LOC
			,A.FIRST_TXN_DT
			,A.FIRST_TXN_LOC_KEY
			,A.BRAND_FIRST_TXN_DT
			,A.ADS_DONOT_STATMNT_INS_IND
			,A.ADS_DONOT_SELL_NAME_IND
			,A.ADS_SPAM_IND
			,A.ADS_EMAIL_CHANGE_DT
			,A.ADS_RTRN_MAIL_FLG
			,A.IS_DM_MARKETABLE_FLG
			,A.IS_EM_MARKETABLE_FLG
			,A.IS_SMS_MARKETABLE_FLG
			,A.RCD_TYP
			,A.EMAIL_CONSENT_DT
			,A.SMS_CONSENT_DT
			,A.DIRECT_MAIL_CONSENT_DT
			,A.LYLTY_ID
			,A.HAS_PLCC_FLG
			,A.IS_LYLTY_MEMBER_FLG
			,A.IS_ALIST_FLG
			,A.LYLTY_TIER
			,A.LYLTY_MEMBER_STTS
			,A.LYLTY_ACCT_OPEN_DT
			,A.LYLTY_ACCT_CLOSE_DT
			,A.LYLTY_ACCT_ENROLL_DT
			,A.NEXT_CONVRSN_STTS
			,A.NCOA_LAST_CNG_DT
			,A.LYLTY_ENRLMNT_LOC_KEY
			,A.LYLTY_ENRLMNT_SRC_KEY
			,A.PLCC_OPEN_DT
			,A.PLCC_CLOSE_DT
			,PERIOD(A.INGEST_DT, A.NEXT_INGEST_DT) PD
		FROM EXPDW_ETE_TMP.TMP0_D_CUS_LU A
		INNER JOIN (
			SELECT CUS_KEY
				,CUS_ID
			FROM EXPDW_ETE_DWH_V.V_DWH_D_CUS_LU
		) CUS ON A.CUS_ID=CUS.CUS_ID
	) SRC;
	
END:************************

d_cus_hist_ld 01/01/2021 01:06:22: TMP_D_CUS_HIST_LU loaded successfully
d_cus_hist_ld 01/01/2021 01:06:22: set_activity_count
d_cus_hist_ld 01/01/2021 01:06:22: set_activity_count end
Start:************************
query_command : SELECT COUNT(*) FROM EXPDW_ETE_TMP.TMP0_D_CUS_LU
END:************************

d_cus_hist_ld 01/01/2021 01:06:22: Source     : TMP0_D_CUS_LU
d_cus_hist_ld 01/01/2021 01:06:22: Destination: TMP_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:06:22: SQL Statistics:
d_cus_hist_ld 01/01/2021 01:06:22: NO OF ROWS INSERTED: 523
d_cus_hist_ld 01/01/2021 01:06:22: NO OF ROWS DELETED:  0
d_cus_hist_ld 01/01/2021 01:06:22: No OF ROWS UPDATED:  0
Start:************************
query_command : MERGE INTO EXPDW_ETE_DWH.DWH_C_AUDIT_LOG AS  A
                   USING (
    					 SELECT 1540 BATCH_ID 
    							,506 JOB_ID
    							,2 LEVEL
    					 ) AS TMP
    					 ON A.BATCH_ID = TMP.BATCH_ID
    					  AND A.JOB_ID = TMP.JOB_ID
    					  AND A.LEVEL = TMP.LEVEL
    					 WHEN MATCHED THEN UPDATE
            					 SET NUMBERS_OF_ROW_INSERTED = NUMBERS_OF_ROW_INSERTED+523
    					 		    ,NUMBERS_OF_ROW_UPDATED  = NUMBERS_OF_ROW_UPDATED+0
    					 		    ,NUMBERS_OF_ROW_DELETED  = NUMBERS_OF_ROW_DELETED+0
    					 		    ,NUMBERS_OF_ROW_REJECTED = NUMBERS_OF_ROW_REJECTED+0
									,AUDIT_TIMESTAMP = CURRENT_TIMESTAMP
    					 WHEN NOT MATCHED THEN INSERT
                   			   (	 BATCH_ID                
    									,JOB_ID                  
    									,JOB_NAME                
    									,BUSINESS_DATE 
                                        ,AUDIT_TIMESTAMP										
    									,SOURCE        
    									,SOURCE_COUNT            
    									,TARGET         
    									,NUMBERS_OF_ROW_INSERTED 
    									,NUMBERS_OF_ROW_UPDATED  
    									,NUMBERS_OF_ROW_DELETED  
    									,NUMBERS_OF_ROW_REJECTED
    									,LEVEL)
    						VALUES(  TMP.BATCH_ID     
    								,TMP.JOB_ID
    								,'d_cus_hist_ld'
    								,CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
									,CURRENT_TIMESTAMP
    								,'TMP0_D_CUS_LU'
    								,        523
    								,'TMP_D_CUS_HIST_LU'
    								,523
    								,0
    								,0
    								,0
    								,TMP.LEVEL)
    							
END:************************

d_cus_hist_ld 01/01/2021 01:06:22: Setting bookmark value for the script in DWH_C_BATCH_LOG table
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG
                      SET BOOKMARK='AFTER_LOAD_TEMP_TABLE'
					  ,JOB_ID=506
                      WHERE BATCH_ID=1540
                       AND JOB_NAME = 'd_cus_hist_ld'
					   AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
                     
END:************************



==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = AFTER_LOAD_TEMP_TABLE  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:06:22: Collecting Statistics for TMP_D_CUS_HIST_LU
Start:************************
query_command : 
	COLLECT STATS COLUMN(CUS_KEY)
		, COLUMN(CUS_KEY, EFF_FROM_DT) 
	ON EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU;
	
END:************************

d_cus_hist_ld 01/01/2021 01:06:23: TMP_D_CUS_HIST_LU Statistics collected successfully
d_cus_hist_ld 01/01/2021 01:06:23: Setting bookmark value for the script in DWH_C_BATCH_LOG table
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG
                      SET BOOKMARK='AFTER_COLLECT_STATS_TMP'
					  ,JOB_ID=506
                      WHERE BATCH_ID=1540
                       AND JOB_NAME = 'd_cus_hist_ld'
					   AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
                     
END:************************



==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = AFTER_COLLECT_STATS_TMP  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:06:23: Loading DWH_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:06:23: 
d_cus_hist_ld 01/01/2021 01:06:23: ###################################################################################
d_cus_hist_ld 01/01/2021 01:06:23: Updating records in DWH_D_CUS_HIST_LU
Start:************************
query_command : UPDATE tgt
									FROM EXPDW_ETE_DWH.DWH_D_CUS_HIST_LU TGT,
										 EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU  SRC
									SET  EFF_TO_DT = SRC.EFF_FROM_DT - 1
										,RCD_UPD_TS=CAST('20210101010619' AS TIMESTAMP FORMAT 'YYYYMMDDHHMISS')
										,RCD_CLOSE_FLG = 1
										,RCD_CLOSE_DT = CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
								    WHERE src.CUS_KEY=tgt.CUS_KEY and tgt.RCD_CLOSE_FLG=0 
										AND (SRC.CUS_KEY,SRC.EFF_FROM_DT) IN (SELECT SRC.CUS_KEY,MIN(SRC.EFF_FROM_DT) FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU SRC
											INNER JOIN EXPDW_ETE_DWH_V.V_DWH_D_CUS_HIST_LU TGT ON src.CUS_KEY=tgt.CUS_KEY
											WHERE (src.CUS_ID <> tgt.CUS_ID OR (src.CUS_ID IS NULL AND tgt.CUS_ID IS NOT NULL) OR (src.CUS_ID IS NOT NULL AND tgt.CUS_ID IS NULL) OR src.HHLD_HIST_KEY <> tgt.HHLD_HIST_KEY OR (src.HHLD_HIST_KEY IS NULL AND tgt.HHLD_HIST_KEY IS NOT NULL) OR (src.HHLD_HIST_KEY IS NOT NULL AND tgt.HHLD_HIST_KEY IS NULL) OR src.FIRST_NAME <> tgt.FIRST_NAME OR (src.FIRST_NAME IS NULL AND tgt.FIRST_NAME IS NOT NULL) OR (src.FIRST_NAME IS NOT NULL AND tgt.FIRST_NAME IS NULL) OR src.FIRST_NAME_SCRBD <> tgt.FIRST_NAME_SCRBD OR (src.FIRST_NAME_SCRBD IS NULL AND tgt.FIRST_NAME_SCRBD IS NOT NULL) OR (src.FIRST_NAME_SCRBD IS NOT NULL AND tgt.FIRST_NAME_SCRBD IS NULL) OR src.LAST_NAME <> tgt.LAST_NAME OR (src.LAST_NAME IS NULL AND tgt.LAST_NAME IS NOT NULL) OR (src.LAST_NAME IS NOT NULL AND tgt.LAST_NAME IS NULL) OR src.LAST_NAME_SCRBD <> tgt.LAST_NAME_SCRBD OR (src.LAST_NAME_SCRBD IS NULL AND tgt.LAST_NAME_SCRBD IS NOT NULL) OR (src.LAST_NAME_SCRBD IS NOT NULL AND tgt.LAST_NAME_SCRBD IS NULL) OR src.ADDRESS1 <> tgt.ADDRESS1 OR (src.ADDRESS1 IS NULL AND tgt.ADDRESS1 IS NOT NULL) OR (src.ADDRESS1 IS NOT NULL AND tgt.ADDRESS1 IS NULL) OR src.ADDRESS1_SCRBD <> tgt.ADDRESS1_SCRBD OR (src.ADDRESS1_SCRBD IS NULL AND tgt.ADDRESS1_SCRBD IS NOT NULL) OR (src.ADDRESS1_SCRBD IS NOT NULL AND tgt.ADDRESS1_SCRBD IS NULL) OR src.ADDRESS2 <> tgt.ADDRESS2 OR (src.ADDRESS2 IS NULL AND tgt.ADDRESS2 IS NOT NULL) OR (src.ADDRESS2 IS NOT NULL AND tgt.ADDRESS2 IS NULL) OR src.ADDRESS2_SCRBD <> tgt.ADDRESS2_SCRBD OR (src.ADDRESS2_SCRBD IS NULL AND tgt.ADDRESS2_SCRBD IS NOT NULL) OR (src.ADDRESS2_SCRBD IS NOT NULL AND tgt.ADDRESS2_SCRBD IS NULL) OR src.CITY <> tgt.CITY OR (src.CITY IS NULL AND tgt.CITY IS NOT NULL) OR (src.CITY IS NOT NULL AND tgt.CITY IS NULL) OR src.CITY_SCRBD <> tgt.CITY_SCRBD OR (src.CITY_SCRBD IS NULL AND tgt.CITY_SCRBD IS NOT NULL) OR (src.CITY_SCRBD IS NOT NULL AND tgt.CITY_SCRBD IS NULL) OR src.STATE_CDE <> tgt.STATE_CDE OR (src.STATE_CDE IS NULL AND tgt.STATE_CDE IS NOT NULL) OR (src.STATE_CDE IS NOT NULL AND tgt.STATE_CDE IS NULL) OR src.STATE_SCRBD <> tgt.STATE_SCRBD OR (src.STATE_SCRBD IS NULL AND tgt.STATE_SCRBD IS NOT NULL) OR (src.STATE_SCRBD IS NOT NULL AND tgt.STATE_SCRBD IS NULL) OR src.ZIP_CDE <> tgt.ZIP_CDE OR (src.ZIP_CDE IS NULL AND tgt.ZIP_CDE IS NOT NULL) OR (src.ZIP_CDE IS NOT NULL AND tgt.ZIP_CDE IS NULL) OR src.ZIP_CODE_SCRBD <> tgt.ZIP_CODE_SCRBD OR (src.ZIP_CODE_SCRBD IS NULL AND tgt.ZIP_CODE_SCRBD IS NOT NULL) OR (src.ZIP_CODE_SCRBD IS NOT NULL AND tgt.ZIP_CODE_SCRBD IS NULL) OR src.ZIP4_CDE <> tgt.ZIP4_CDE OR (src.ZIP4_CDE IS NULL AND tgt.ZIP4_CDE IS NOT NULL) OR (src.ZIP4_CDE IS NOT NULL AND tgt.ZIP4_CDE IS NULL) OR src.ZIP4_CODE_SCRBD <> tgt.ZIP4_CODE_SCRBD OR (src.ZIP4_CODE_SCRBD IS NULL AND tgt.ZIP4_CODE_SCRBD IS NOT NULL) OR (src.ZIP4_CODE_SCRBD IS NOT NULL AND tgt.ZIP4_CODE_SCRBD IS NULL) OR src.ZIP_FULL_CDE_SCRBD <> tgt.ZIP_FULL_CDE_SCRBD OR (src.ZIP_FULL_CDE_SCRBD IS NULL AND tgt.ZIP_FULL_CDE_SCRBD IS NOT NULL) OR (src.ZIP_FULL_CDE_SCRBD IS NOT NULL AND tgt.ZIP_FULL_CDE_SCRBD IS NULL) OR src.NON_US_POSTAL_CDE <> tgt.NON_US_POSTAL_CDE OR (src.NON_US_POSTAL_CDE IS NULL AND tgt.NON_US_POSTAL_CDE IS NOT NULL) OR (src.NON_US_POSTAL_CDE IS NOT NULL AND tgt.NON_US_POSTAL_CDE IS NULL) OR src.COUNTRY_CDE <> tgt.COUNTRY_CDE OR (src.COUNTRY_CDE IS NULL AND tgt.COUNTRY_CDE IS NOT NULL) OR (src.COUNTRY_CDE IS NOT NULL AND tgt.COUNTRY_CDE IS NULL) OR src.COUNTRY_CDE_SCRBD <> tgt.COUNTRY_CDE_SCRBD OR (src.COUNTRY_CDE_SCRBD IS NULL AND tgt.COUNTRY_CDE_SCRBD IS NOT NULL) OR (src.COUNTRY_CDE_SCRBD IS NOT NULL AND tgt.COUNTRY_CDE_SCRBD IS NULL) OR src.NON_US_CUS_FLG <> tgt.NON_US_CUS_FLG OR (src.NON_US_CUS_FLG IS NULL AND tgt.NON_US_CUS_FLG IS NOT NULL) OR (src.NON_US_CUS_FLG IS NOT NULL AND tgt.NON_US_CUS_FLG IS NULL) OR src.IS_ADDRESS_VALID_FLG <> tgt.IS_ADDRESS_VALID_FLG OR (src.IS_ADDRESS_VALID_FLG IS NULL AND tgt.IS_ADDRESS_VALID_FLG IS NOT NULL) OR (src.IS_ADDRESS_VALID_FLG IS NOT NULL AND tgt.IS_ADDRESS_VALID_FLG IS NULL) OR src.IS_ADDRESS_LIKELY_VALID_FLG <> tgt.IS_ADDRESS_LIKELY_VALID_FLG OR (src.IS_ADDRESS_LIKELY_VALID_FLG IS NULL AND tgt.IS_ADDRESS_LIKELY_VALID_FLG IS NOT NULL) OR (src.IS_ADDRESS_LIKELY_VALID_FLG IS NOT NULL AND tgt.IS_ADDRESS_LIKELY_VALID_FLG IS NULL) OR src.IS_EMAIL_VALID_FLG <> tgt.IS_EMAIL_VALID_FLG OR (src.IS_EMAIL_VALID_FLG IS NULL AND tgt.IS_EMAIL_VALID_FLG IS NOT NULL) OR (src.IS_EMAIL_VALID_FLG IS NOT NULL AND tgt.IS_EMAIL_VALID_FLG IS NULL) OR src.IS_PHONE_FOR_SMS_VALID_FLG <> tgt.IS_PHONE_FOR_SMS_VALID_FLG OR (src.IS_PHONE_FOR_SMS_VALID_FLG IS NULL AND tgt.IS_PHONE_FOR_SMS_VALID_FLG IS NOT NULL) OR (src.IS_PHONE_FOR_SMS_VALID_FLG IS NOT NULL AND tgt.IS_PHONE_FOR_SMS_VALID_FLG IS NULL) OR src.PHONE_NUM <> tgt.PHONE_NUM OR (src.PHONE_NUM IS NULL AND tgt.PHONE_NUM IS NOT NULL) OR (src.PHONE_NUM IS NOT NULL AND tgt.PHONE_NUM IS NULL) OR src.PHONE_TYP <> tgt.PHONE_TYP OR (src.PHONE_TYP IS NULL AND tgt.PHONE_TYP IS NOT NULL) OR (src.PHONE_TYP IS NOT NULL AND tgt.PHONE_TYP IS NULL) OR src.EMAIL_ADDRESS <> tgt.EMAIL_ADDRESS OR (src.EMAIL_ADDRESS IS NULL AND tgt.EMAIL_ADDRESS IS NOT NULL) OR (src.EMAIL_ADDRESS IS NOT NULL AND tgt.EMAIL_ADDRESS IS NULL) OR src.GENDER_CDE <> tgt.GENDER_CDE OR (src.GENDER_CDE IS NULL AND tgt.GENDER_CDE IS NOT NULL) OR (src.GENDER_CDE IS NOT NULL AND tgt.GENDER_CDE IS NULL) OR src.DIRECT_MAIL_CONSENT_FLG <> tgt.DIRECT_MAIL_CONSENT_FLG OR (src.DIRECT_MAIL_CONSENT_FLG IS NULL AND tgt.DIRECT_MAIL_CONSENT_FLG IS NOT NULL) OR (src.DIRECT_MAIL_CONSENT_FLG IS NOT NULL AND tgt.DIRECT_MAIL_CONSENT_FLG IS NULL) OR src.EMAIL_CONSENT_FLG <> tgt.EMAIL_CONSENT_FLG OR (src.EMAIL_CONSENT_FLG IS NULL AND tgt.EMAIL_CONSENT_FLG IS NOT NULL) OR (src.EMAIL_CONSENT_FLG IS NOT NULL AND tgt.EMAIL_CONSENT_FLG IS NULL) OR src.SMS_CONSENT_FLG <> tgt.SMS_CONSENT_FLG OR (src.SMS_CONSENT_FLG IS NULL AND tgt.SMS_CONSENT_FLG IS NOT NULL) OR (src.SMS_CONSENT_FLG IS NOT NULL AND tgt.SMS_CONSENT_FLG IS NULL) OR src.BIRTH_DT <> tgt.BIRTH_DT OR (src.BIRTH_DT IS NULL AND tgt.BIRTH_DT IS NOT NULL) OR (src.BIRTH_DT IS NOT NULL AND tgt.BIRTH_DT IS NULL) OR src.AGE <> tgt.AGE OR (src.AGE IS NULL AND tgt.AGE IS NOT NULL) OR (src.AGE IS NOT NULL AND tgt.AGE IS NULL) OR src.AGE_GRP_CDE <> tgt.AGE_GRP_CDE OR (src.AGE_GRP_CDE IS NULL AND tgt.AGE_GRP_CDE IS NOT NULL) OR (src.AGE_GRP_CDE IS NOT NULL AND tgt.AGE_GRP_CDE IS NULL) OR src.AGE_QUALIFIER <> tgt.AGE_QUALIFIER OR (src.AGE_QUALIFIER IS NULL AND tgt.AGE_QUALIFIER IS NOT NULL) OR (src.AGE_QUALIFIER IS NOT NULL AND tgt.AGE_QUALIFIER IS NULL) OR src.DECEASED_FLG <> tgt.DECEASED_FLG OR (src.DECEASED_FLG IS NULL AND tgt.DECEASED_FLG IS NOT NULL) OR (src.DECEASED_FLG IS NOT NULL AND tgt.DECEASED_FLG IS NULL) OR src.ADDRESS_IS_PRISON_FLG <> tgt.ADDRESS_IS_PRISON_FLG OR (src.ADDRESS_IS_PRISON_FLG IS NULL AND tgt.ADDRESS_IS_PRISON_FLG IS NOT NULL) OR (src.ADDRESS_IS_PRISON_FLG IS NOT NULL AND tgt.ADDRESS_IS_PRISON_FLG IS NULL) OR src.ADD_DT <> tgt.ADD_DT OR (src.ADD_DT IS NULL AND tgt.ADD_DT IS NOT NULL) OR (src.ADD_DT IS NOT NULL AND tgt.ADD_DT IS NULL) OR src.INTRODCTN_DT <> tgt.INTRODCTN_DT OR (src.INTRODCTN_DT IS NULL AND tgt.INTRODCTN_DT IS NOT NULL) OR (src.INTRODCTN_DT IS NOT NULL AND tgt.INTRODCTN_DT IS NULL) OR src.LATITUDE <> tgt.LATITUDE OR (src.LATITUDE IS NULL AND tgt.LATITUDE IS NOT NULL) OR (src.LATITUDE IS NOT NULL AND tgt.LATITUDE IS NULL) OR src.LONGITUDE <> tgt.LONGITUDE OR (src.LONGITUDE IS NULL AND tgt.LONGITUDE IS NOT NULL) OR (src.LONGITUDE IS NOT NULL AND tgt.LONGITUDE IS NULL) OR src.CLOSEST_LOC_KEY <> tgt.CLOSEST_LOC_KEY OR (src.CLOSEST_LOC_KEY IS NULL AND tgt.CLOSEST_LOC_KEY IS NOT NULL) OR (src.CLOSEST_LOC_KEY IS NOT NULL AND tgt.CLOSEST_LOC_KEY IS NULL) OR src.DIST_TO_CLOSEST_LOC <> tgt.DIST_TO_CLOSEST_LOC OR (src.DIST_TO_CLOSEST_LOC IS NULL AND tgt.DIST_TO_CLOSEST_LOC IS NOT NULL) OR (src.DIST_TO_CLOSEST_LOC IS NOT NULL AND tgt.DIST_TO_CLOSEST_LOC IS NULL) OR src.SECOND_CLOSEST_LOC_KEY <> tgt.SECOND_CLOSEST_LOC_KEY OR (src.SECOND_CLOSEST_LOC_KEY IS NULL AND tgt.SECOND_CLOSEST_LOC_KEY IS NOT NULL) OR (src.SECOND_CLOSEST_LOC_KEY IS NOT NULL AND tgt.SECOND_CLOSEST_LOC_KEY IS NULL) OR src.DIST_TO_SEC_CLOSEST_LOC <> tgt.DIST_TO_SEC_CLOSEST_LOC OR (src.DIST_TO_SEC_CLOSEST_LOC IS NULL AND tgt.DIST_TO_SEC_CLOSEST_LOC IS NOT NULL) OR (src.DIST_TO_SEC_CLOSEST_LOC IS NOT NULL AND tgt.DIST_TO_SEC_CLOSEST_LOC IS NULL) OR src.PREFERRED_LOC_KEY <> tgt.PREFERRED_LOC_KEY OR (src.PREFERRED_LOC_KEY IS NULL AND tgt.PREFERRED_LOC_KEY IS NOT NULL) OR (src.PREFERRED_LOC_KEY IS NOT NULL AND tgt.PREFERRED_LOC_KEY IS NULL) OR src.DIST_TO_PREFERRED_LOC <> tgt.DIST_TO_PREFERRED_LOC OR (src.DIST_TO_PREFERRED_LOC IS NULL AND tgt.DIST_TO_PREFERRED_LOC IS NOT NULL) OR (src.DIST_TO_PREFERRED_LOC IS NOT NULL AND tgt.DIST_TO_PREFERRED_LOC IS NULL) OR src.FIRST_TXN_DT <> tgt.FIRST_TXN_DT OR (src.FIRST_TXN_DT IS NULL AND tgt.FIRST_TXN_DT IS NOT NULL) OR (src.FIRST_TXN_DT IS NOT NULL AND tgt.FIRST_TXN_DT IS NULL) OR src.FIRST_TXN_LOC_KEY <> tgt.FIRST_TXN_LOC_KEY OR (src.FIRST_TXN_LOC_KEY IS NULL AND tgt.FIRST_TXN_LOC_KEY IS NOT NULL) OR (src.FIRST_TXN_LOC_KEY IS NOT NULL AND tgt.FIRST_TXN_LOC_KEY IS NULL) OR src.BRAND_FIRST_TXN_DT <> tgt.BRAND_FIRST_TXN_DT OR (src.BRAND_FIRST_TXN_DT IS NULL AND tgt.BRAND_FIRST_TXN_DT IS NOT NULL) OR (src.BRAND_FIRST_TXN_DT IS NOT NULL AND tgt.BRAND_FIRST_TXN_DT IS NULL) OR src.ADS_DONOT_STATMNT_INS_IND <> tgt.ADS_DONOT_STATMNT_INS_IND OR (src.ADS_DONOT_STATMNT_INS_IND IS NULL AND tgt.ADS_DONOT_STATMNT_INS_IND IS NOT NULL) OR (src.ADS_DONOT_STATMNT_INS_IND IS NOT NULL AND tgt.ADS_DONOT_STATMNT_INS_IND IS NULL) OR src.ADS_DONOT_SELL_NAME_IND <> tgt.ADS_DONOT_SELL_NAME_IND OR (src.ADS_DONOT_SELL_NAME_IND IS NULL AND tgt.ADS_DONOT_SELL_NAME_IND IS NOT NULL) OR (src.ADS_DONOT_SELL_NAME_IND IS NOT NULL AND tgt.ADS_DONOT_SELL_NAME_IND IS NULL) OR src.ADS_SPAM_IND <> tgt.ADS_SPAM_IND OR (src.ADS_SPAM_IND IS NULL AND tgt.ADS_SPAM_IND IS NOT NULL) OR (src.ADS_SPAM_IND IS NOT NULL AND tgt.ADS_SPAM_IND IS NULL) OR src.ADS_EMAIL_CHANGE_DT <> tgt.ADS_EMAIL_CHANGE_DT OR (src.ADS_EMAIL_CHANGE_DT IS NULL AND tgt.ADS_EMAIL_CHANGE_DT IS NOT NULL) OR (src.ADS_EMAIL_CHANGE_DT IS NOT NULL AND tgt.ADS_EMAIL_CHANGE_DT IS NULL) OR src.ADS_RTRN_MAIL_FLG <> tgt.ADS_RTRN_MAIL_FLG OR (src.ADS_RTRN_MAIL_FLG IS NULL AND tgt.ADS_RTRN_MAIL_FLG IS NOT NULL) OR (src.ADS_RTRN_MAIL_FLG IS NOT NULL AND tgt.ADS_RTRN_MAIL_FLG IS NULL) OR src.IS_DM_MARKETABLE_FLG <> tgt.IS_DM_MARKETABLE_FLG OR (src.IS_DM_MARKETABLE_FLG IS NULL AND tgt.IS_DM_MARKETABLE_FLG IS NOT NULL) OR (src.IS_DM_MARKETABLE_FLG IS NOT NULL AND tgt.IS_DM_MARKETABLE_FLG IS NULL) OR src.IS_EM_MARKETABLE_FLG <> tgt.IS_EM_MARKETABLE_FLG OR (src.IS_EM_MARKETABLE_FLG IS NULL AND tgt.IS_EM_MARKETABLE_FLG IS NOT NULL) OR (src.IS_EM_MARKETABLE_FLG IS NOT NULL AND tgt.IS_EM_MARKETABLE_FLG IS NULL) OR src.IS_SMS_MARKETABLE_FLG <> tgt.IS_SMS_MARKETABLE_FLG OR (src.IS_SMS_MARKETABLE_FLG IS NULL AND tgt.IS_SMS_MARKETABLE_FLG IS NOT NULL) OR (src.IS_SMS_MARKETABLE_FLG IS NOT NULL AND tgt.IS_SMS_MARKETABLE_FLG IS NULL) OR src.RCD_TYP <> tgt.RCD_TYP OR (src.RCD_TYP IS NULL AND tgt.RCD_TYP IS NOT NULL) OR (src.RCD_TYP IS NOT NULL AND tgt.RCD_TYP IS NULL) OR src.EMAIL_CONSENT_DT <> tgt.EMAIL_CONSENT_DT OR (src.EMAIL_CONSENT_DT IS NULL AND tgt.EMAIL_CONSENT_DT IS NOT NULL) OR (src.EMAIL_CONSENT_DT IS NOT NULL AND tgt.EMAIL_CONSENT_DT IS NULL) OR src.SMS_CONSENT_DT <> tgt.SMS_CONSENT_DT OR (src.SMS_CONSENT_DT IS NULL AND tgt.SMS_CONSENT_DT IS NOT NULL) OR (src.SMS_CONSENT_DT IS NOT NULL AND tgt.SMS_CONSENT_DT IS NULL) OR src.DIRECT_MAIL_CONSENT_DT <> tgt.DIRECT_MAIL_CONSENT_DT OR (src.DIRECT_MAIL_CONSENT_DT IS NULL AND tgt.DIRECT_MAIL_CONSENT_DT IS NOT NULL) OR (src.DIRECT_MAIL_CONSENT_DT IS NOT NULL AND tgt.DIRECT_MAIL_CONSENT_DT IS NULL) OR src.LYLTY_ID <> tgt.LYLTY_ID OR (src.LYLTY_ID IS NULL AND tgt.LYLTY_ID IS NOT NULL) OR (src.LYLTY_ID IS NOT NULL AND tgt.LYLTY_ID IS NULL) OR src.HAS_PLCC_FLG <> tgt.HAS_PLCC_FLG OR (src.HAS_PLCC_FLG IS NULL AND tgt.HAS_PLCC_FLG IS NOT NULL) OR (src.HAS_PLCC_FLG IS NOT NULL AND tgt.HAS_PLCC_FLG IS NULL) OR src.IS_LYLTY_MEMBER_FLG <> tgt.IS_LYLTY_MEMBER_FLG OR (src.IS_LYLTY_MEMBER_FLG IS NULL AND tgt.IS_LYLTY_MEMBER_FLG IS NOT NULL) OR (src.IS_LYLTY_MEMBER_FLG IS NOT NULL AND tgt.IS_LYLTY_MEMBER_FLG IS NULL) OR src.IS_ALIST_FLG <> tgt.IS_ALIST_FLG OR (src.IS_ALIST_FLG IS NULL AND tgt.IS_ALIST_FLG IS NOT NULL) OR (src.IS_ALIST_FLG IS NOT NULL AND tgt.IS_ALIST_FLG IS NULL) OR src.LYLTY_TIER <> tgt.LYLTY_TIER OR (src.LYLTY_TIER IS NULL AND tgt.LYLTY_TIER IS NOT NULL) OR (src.LYLTY_TIER IS NOT NULL AND tgt.LYLTY_TIER IS NULL) OR src.LYLTY_MEMBER_STTS <> tgt.LYLTY_MEMBER_STTS OR (src.LYLTY_MEMBER_STTS IS NULL AND tgt.LYLTY_MEMBER_STTS IS NOT NULL) OR (src.LYLTY_MEMBER_STTS IS NOT NULL AND tgt.LYLTY_MEMBER_STTS IS NULL) OR src.LYLTY_ACCT_OPEN_DT <> tgt.LYLTY_ACCT_OPEN_DT OR (src.LYLTY_ACCT_OPEN_DT IS NULL AND tgt.LYLTY_ACCT_OPEN_DT IS NOT NULL) OR (src.LYLTY_ACCT_OPEN_DT IS NOT NULL AND tgt.LYLTY_ACCT_OPEN_DT IS NULL) OR src.LYLTY_ACCT_CLOSE_DT <> tgt.LYLTY_ACCT_CLOSE_DT OR (src.LYLTY_ACCT_CLOSE_DT IS NULL AND tgt.LYLTY_ACCT_CLOSE_DT IS NOT NULL) OR (src.LYLTY_ACCT_CLOSE_DT IS NOT NULL AND tgt.LYLTY_ACCT_CLOSE_DT IS NULL) OR src.LYLTY_ACCT_ENROLL_DT <> tgt.LYLTY_ACCT_ENROLL_DT OR (src.LYLTY_ACCT_ENROLL_DT IS NULL AND tgt.LYLTY_ACCT_ENROLL_DT IS NOT NULL) OR (src.LYLTY_ACCT_ENROLL_DT IS NOT NULL AND tgt.LYLTY_ACCT_ENROLL_DT IS NULL) OR src.NEXT_CONVRSN_STTS <> tgt.NEXT_CONVRSN_STTS OR (src.NEXT_CONVRSN_STTS IS NULL AND tgt.NEXT_CONVRSN_STTS IS NOT NULL) OR (src.NEXT_CONVRSN_STTS IS NOT NULL AND tgt.NEXT_CONVRSN_STTS IS NULL) OR src.NCOA_LAST_CNG_DT <> tgt.NCOA_LAST_CNG_DT OR (src.NCOA_LAST_CNG_DT IS NULL AND tgt.NCOA_LAST_CNG_DT IS NOT NULL) OR (src.NCOA_LAST_CNG_DT IS NOT NULL AND tgt.NCOA_LAST_CNG_DT IS NULL) OR src.LYLTY_ENRLMNT_LOC_KEY <> tgt.LYLTY_ENRLMNT_LOC_KEY OR (src.LYLTY_ENRLMNT_LOC_KEY IS NULL AND tgt.LYLTY_ENRLMNT_LOC_KEY IS NOT NULL) OR (src.LYLTY_ENRLMNT_LOC_KEY IS NOT NULL AND tgt.LYLTY_ENRLMNT_LOC_KEY IS NULL) OR src.LYLTY_ENRLMNT_SRC_KEY <> tgt.LYLTY_ENRLMNT_SRC_KEY OR (src.LYLTY_ENRLMNT_SRC_KEY IS NULL AND tgt.LYLTY_ENRLMNT_SRC_KEY IS NOT NULL) OR (src.LYLTY_ENRLMNT_SRC_KEY IS NOT NULL AND tgt.LYLTY_ENRLMNT_SRC_KEY IS NULL) OR src.PLCC_OPEN_DT <> tgt.PLCC_OPEN_DT OR (src.PLCC_OPEN_DT IS NULL AND tgt.PLCC_OPEN_DT IS NOT NULL) OR (src.PLCC_OPEN_DT IS NOT NULL AND tgt.PLCC_OPEN_DT IS NULL) OR src.PLCC_CLOSE_DT <> tgt.PLCC_CLOSE_DT OR (src.PLCC_CLOSE_DT IS NULL AND tgt.PLCC_CLOSE_DT IS NOT NULL) OR (src.PLCC_CLOSE_DT IS NOT NULL AND tgt.PLCC_CLOSE_DT IS NULL)) and tgt.RCD_CLOSE_FLG=0 
												AND SRC.EFF_FROM_DT > TGT.EFF_FROM_DT GROUP BY SRC.CUS_KEY )
END:************************

d_cus_hist_ld 01/01/2021 01:13:57: Updating records in DWH_D_CUS_HIST_LU completed successfully
d_cus_hist_ld 01/01/2021 01:13:57: ###################################################################################
d_cus_hist_ld 01/01/2021 01:13:57: 
d_cus_hist_ld 01/01/2021 01:13:57: set_activity_count
d_cus_hist_ld 01/01/2021 01:13:57: set_activity_count end
Start:************************
query_command : SELECT COUNT(*) FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU
END:************************

d_cus_hist_ld 01/01/2021 01:13:57: Source     : TMP_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:13:57: Destination: DWH_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:13:57: SQL Statistics:
d_cus_hist_ld 01/01/2021 01:13:57: NO OF ROWS INSERTED: 0
d_cus_hist_ld 01/01/2021 01:13:57: NO OF ROWS DELETED:  0
d_cus_hist_ld 01/01/2021 01:13:57: No OF ROWS UPDATED:  97
Start:************************
query_command : MERGE INTO EXPDW_ETE_DWH.DWH_C_AUDIT_LOG AS  A
                   USING (
    					 SELECT 1540 BATCH_ID 
    							,506 JOB_ID
    							,3 LEVEL
    					 ) AS TMP
    					 ON A.BATCH_ID = TMP.BATCH_ID
    					  AND A.JOB_ID = TMP.JOB_ID
    					  AND A.LEVEL = TMP.LEVEL
    					 WHEN MATCHED THEN UPDATE
            					 SET NUMBERS_OF_ROW_INSERTED = NUMBERS_OF_ROW_INSERTED+0
    					 		    ,NUMBERS_OF_ROW_UPDATED  = NUMBERS_OF_ROW_UPDATED+97
    					 		    ,NUMBERS_OF_ROW_DELETED  = NUMBERS_OF_ROW_DELETED+0
    					 		    ,NUMBERS_OF_ROW_REJECTED = NUMBERS_OF_ROW_REJECTED+0
									,AUDIT_TIMESTAMP = CURRENT_TIMESTAMP
    					 WHEN NOT MATCHED THEN INSERT
                   			   (	 BATCH_ID                
    									,JOB_ID                  
    									,JOB_NAME                
    									,BUSINESS_DATE 
                                        ,AUDIT_TIMESTAMP										
    									,SOURCE        
    									,SOURCE_COUNT            
    									,TARGET         
    									,NUMBERS_OF_ROW_INSERTED 
    									,NUMBERS_OF_ROW_UPDATED  
    									,NUMBERS_OF_ROW_DELETED  
    									,NUMBERS_OF_ROW_REJECTED
    									,LEVEL)
    						VALUES(  TMP.BATCH_ID     
    								,TMP.JOB_ID
    								,'d_cus_hist_ld'
    								,CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
									,CURRENT_TIMESTAMP
    								,'TMP_D_CUS_HIST_LU'
    								,        523
    								,'DWH_D_CUS_HIST_LU'
    								,0
    								,97
    								,0
    								,0
    								,TMP.LEVEL)
    							
END:************************

d_cus_hist_ld 01/01/2021 01:13:57: 
d_cus_hist_ld 01/01/2021 01:13:57: ###################################################################################
d_cus_hist_ld 01/01/2021 01:13:57: Inserting new records into EXPDW_ETE_DWH.DWH_D_CUS_HIST_LU from EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU
Start:************************
query_command : INSERT INTO EXPDW_ETE_DWH.DWH_D_CUS_HIST_LU 
								(    CUS_HIST_KEY
								   , CUS_KEY
								   , EFF_FROM_DT
								   , EFF_TO_DT
								   , CUS_ID, HHLD_HIST_KEY, FIRST_NAME, FIRST_NAME_SCRBD, LAST_NAME, LAST_NAME_SCRBD, ADDRESS1, ADDRESS1_SCRBD, ADDRESS2, ADDRESS2_SCRBD, CITY, CITY_SCRBD, STATE_CDE, STATE_SCRBD, ZIP_CDE, ZIP_CODE_SCRBD, ZIP4_CDE, ZIP4_CODE_SCRBD, ZIP_FULL_CDE_SCRBD, NON_US_POSTAL_CDE, COUNTRY_CDE, COUNTRY_CDE_SCRBD, NON_US_CUS_FLG, IS_ADDRESS_VALID_FLG, IS_ADDRESS_LIKELY_VALID_FLG, IS_EMAIL_VALID_FLG, IS_PHONE_FOR_SMS_VALID_FLG, PHONE_NUM, PHONE_TYP, EMAIL_ADDRESS, GENDER_CDE, DIRECT_MAIL_CONSENT_FLG, EMAIL_CONSENT_FLG, SMS_CONSENT_FLG, BIRTH_DT, AGE, AGE_GRP_CDE, AGE_QUALIFIER, DECEASED_FLG, ADDRESS_IS_PRISON_FLG, ADD_DT, INTRODCTN_DT, LATITUDE, LONGITUDE, CLOSEST_LOC_KEY, DIST_TO_CLOSEST_LOC, SECOND_CLOSEST_LOC_KEY, DIST_TO_SEC_CLOSEST_LOC, PREFERRED_LOC_KEY, DIST_TO_PREFERRED_LOC, FIRST_TXN_DT, FIRST_TXN_LOC_KEY, BRAND_FIRST_TXN_DT, ADS_DONOT_STATMNT_INS_IND, ADS_DONOT_SELL_NAME_IND, ADS_SPAM_IND, ADS_EMAIL_CHANGE_DT, ADS_RTRN_MAIL_FLG, IS_DM_MARKETABLE_FLG, IS_EM_MARKETABLE_FLG, IS_SMS_MARKETABLE_FLG, RCD_TYP, EMAIL_CONSENT_DT, SMS_CONSENT_DT, DIRECT_MAIL_CONSENT_DT, LYLTY_ID, HAS_PLCC_FLG, IS_LYLTY_MEMBER_FLG, IS_ALIST_FLG, LYLTY_TIER, LYLTY_MEMBER_STTS, LYLTY_ACCT_OPEN_DT, LYLTY_ACCT_CLOSE_DT, LYLTY_ACCT_ENROLL_DT, NEXT_CONVRSN_STTS, NCOA_LAST_CNG_DT, LYLTY_ENRLMNT_LOC_KEY, LYLTY_ENRLMNT_SRC_KEY, PLCC_OPEN_DT, PLCC_CLOSE_DT
								   , RCD_INS_TS
								   , RCD_UPD_TS
								   , RCD_TMP_CLOSE_FLG
								   , RCD_CLOSE_FLG
								   , RCD_CLOSE_DT
							   )
							   
							   SELECT COALESCE((SELECT MAX(CUS_HIST_KEY) FROM EXPDW_ETE_DWH_V.V_DWH_D_CUS_HIST_LU WHERE CUS_HIST_KEY>=0) , 0) + RANK() OVER ( ORDER BY CUS_KEY,EFF_FROM_DT) CUS_HIST_KEY
								   , CUS_KEY
								   , EFF_FROM_DT
								   , EFF_TO_DT
								   , CUS_ID, HHLD_HIST_KEY, FIRST_NAME, FIRST_NAME_SCRBD, LAST_NAME, LAST_NAME_SCRBD, ADDRESS1, ADDRESS1_SCRBD, ADDRESS2, ADDRESS2_SCRBD, CITY, CITY_SCRBD, STATE_CDE, STATE_SCRBD, ZIP_CDE, ZIP_CODE_SCRBD, ZIP4_CDE, ZIP4_CODE_SCRBD, ZIP_FULL_CDE_SCRBD, NON_US_POSTAL_CDE, COUNTRY_CDE, COUNTRY_CDE_SCRBD, NON_US_CUS_FLG, IS_ADDRESS_VALID_FLG, IS_ADDRESS_LIKELY_VALID_FLG, IS_EMAIL_VALID_FLG, IS_PHONE_FOR_SMS_VALID_FLG, PHONE_NUM, PHONE_TYP, EMAIL_ADDRESS, GENDER_CDE, DIRECT_MAIL_CONSENT_FLG, EMAIL_CONSENT_FLG, SMS_CONSENT_FLG, BIRTH_DT, AGE, AGE_GRP_CDE, AGE_QUALIFIER, DECEASED_FLG, ADDRESS_IS_PRISON_FLG, ADD_DT, INTRODCTN_DT, LATITUDE, LONGITUDE, CLOSEST_LOC_KEY, DIST_TO_CLOSEST_LOC, SECOND_CLOSEST_LOC_KEY, DIST_TO_SEC_CLOSEST_LOC, PREFERRED_LOC_KEY, DIST_TO_PREFERRED_LOC, FIRST_TXN_DT, FIRST_TXN_LOC_KEY, BRAND_FIRST_TXN_DT, ADS_DONOT_STATMNT_INS_IND, ADS_DONOT_SELL_NAME_IND, ADS_SPAM_IND, ADS_EMAIL_CHANGE_DT, ADS_RTRN_MAIL_FLG, IS_DM_MARKETABLE_FLG, IS_EM_MARKETABLE_FLG, IS_SMS_MARKETABLE_FLG, RCD_TYP, EMAIL_CONSENT_DT, SMS_CONSENT_DT, DIRECT_MAIL_CONSENT_DT, LYLTY_ID, HAS_PLCC_FLG, IS_LYLTY_MEMBER_FLG, IS_ALIST_FLG, LYLTY_TIER, LYLTY_MEMBER_STTS, LYLTY_ACCT_OPEN_DT, LYLTY_ACCT_CLOSE_DT, LYLTY_ACCT_ENROLL_DT, NEXT_CONVRSN_STTS, NCOA_LAST_CNG_DT, LYLTY_ENRLMNT_LOC_KEY, LYLTY_ENRLMNT_SRC_KEY, PLCC_OPEN_DT, PLCC_CLOSE_DT
								   , CAST('20210101010619' AS TIMESTAMP FORMAT 'YYYYMMDDHHMISS') RCD_INS_TS
								   , CAST('20210101010619' AS TIMESTAMP FORMAT 'YYYYMMDDHHMISS') RCD_UPD_TS
								   , RCD_CLOSE_FLG
								   , RCD_CLOSE_FLG
								   ,CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
							   
								FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU  SRC
								 WHERE NOT EXISTS
								  (SELECT 1 
									 FROM (SELECT CUS_KEY 
										FROM EXPDW_ETE_DWH_V.V_DWH_D_CUS_HIST_LU 
										WHERE RCD_TMP_CLOSE_FLG=0) TGT
									 WHERE src.CUS_KEY=tgt.CUS_KEY)
								   OR EXISTS
								   (SELECT 1 
									 FROM (SELECT CUS_KEY, EFF_TO_DT										
										FROM EXPDW_ETE_DWH_V.V_DWH_D_CUS_HIST_LU 
										WHERE RCD_TMP_CLOSE_FLG=0) TGT
								   WHERE src.CUS_KEY=tgt.CUS_KEY AND SRC.EFF_FROM_DT > TGT.EFF_TO_DT )
END:************************

d_cus_hist_ld 01/01/2021 01:18:25: Inserting new records into DWH_D_CUS_HIST_LU completed successfully
d_cus_hist_ld 01/01/2021 01:18:25: ###################################################################################
d_cus_hist_ld 01/01/2021 01:18:25: 
d_cus_hist_ld 01/01/2021 01:18:25: set_activity_count
d_cus_hist_ld 01/01/2021 01:18:25: set_activity_count end
Start:************************
query_command : SELECT COUNT(*) FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU
END:************************

d_cus_hist_ld 01/01/2021 01:18:25: Source     : TMP_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:18:25: Destination: DWH_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:18:25: SQL Statistics:
d_cus_hist_ld 01/01/2021 01:18:25: NO OF ROWS INSERTED: 523
d_cus_hist_ld 01/01/2021 01:18:25: NO OF ROWS DELETED:  0
d_cus_hist_ld 01/01/2021 01:18:25: No OF ROWS UPDATED:  0
Start:************************
query_command : MERGE INTO EXPDW_ETE_DWH.DWH_C_AUDIT_LOG AS  A
                   USING (
    					 SELECT 1540 BATCH_ID 
    							,506 JOB_ID
    							,3 LEVEL
    					 ) AS TMP
    					 ON A.BATCH_ID = TMP.BATCH_ID
    					  AND A.JOB_ID = TMP.JOB_ID
    					  AND A.LEVEL = TMP.LEVEL
    					 WHEN MATCHED THEN UPDATE
            					 SET NUMBERS_OF_ROW_INSERTED = NUMBERS_OF_ROW_INSERTED+523
    					 		    ,NUMBERS_OF_ROW_UPDATED  = NUMBERS_OF_ROW_UPDATED+0
    					 		    ,NUMBERS_OF_ROW_DELETED  = NUMBERS_OF_ROW_DELETED+0
    					 		    ,NUMBERS_OF_ROW_REJECTED = NUMBERS_OF_ROW_REJECTED+0
									,AUDIT_TIMESTAMP = CURRENT_TIMESTAMP
    					 WHEN NOT MATCHED THEN INSERT
                   			   (	 BATCH_ID                
    									,JOB_ID                  
    									,JOB_NAME                
    									,BUSINESS_DATE 
                                        ,AUDIT_TIMESTAMP										
    									,SOURCE        
    									,SOURCE_COUNT            
    									,TARGET         
    									,NUMBERS_OF_ROW_INSERTED 
    									,NUMBERS_OF_ROW_UPDATED  
    									,NUMBERS_OF_ROW_DELETED  
    									,NUMBERS_OF_ROW_REJECTED
    									,LEVEL)
    						VALUES(  TMP.BATCH_ID     
    								,TMP.JOB_ID
    								,'d_cus_hist_ld'
    								,CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
									,CURRENT_TIMESTAMP
    								,'TMP_D_CUS_HIST_LU'
    								,        523
    								,'DWH_D_CUS_HIST_LU'
    								,523
    								,0
    								,0
    								,0
    								,TMP.LEVEL)
    							
END:************************

d_cus_hist_ld 01/01/2021 01:18:25: Setting bookmark value for the script in DWH_C_BATCH_LOG table
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG
                      SET BOOKMARK='AFTER_INSERT_FROM_TEMP'
					  ,JOB_ID=506
                      WHERE BATCH_ID=1540
                       AND JOB_NAME = 'd_cus_hist_ld'
					   AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
                     
END:************************



==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = AFTER_INSERT_FROM_TEMP  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:18:25: Updating RCD_TMP_CLOSE_FLG in DWH_D_CUS_HIST_LU
Start:************************
query_command : 
	UPDATE TGT
	FROM EXPDW_ETE_DWH.DWH_D_CUS_HIST_LU TGT, 
		EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU SRC
	SET RCD_TMP_CLOSE_FLG=1
	WHERE SRC.CUS_KEY=TGT.CUS_KEY
		AND TGT.RCD_CLOSE_FLG=1 
		AND TGT.RCD_TMP_CLOSE_FLG=0
		AND SRC.RCD_CLOSE_FLG=0;
	
END:************************

d_cus_hist_ld 01/01/2021 01:22:19: DWH_D_CUS_HIST_LU updated successfully with RCD_TMP_CLOSE_FLG
d_cus_hist_ld 01/01/2021 01:22:19: set_activity_count
d_cus_hist_ld 01/01/2021 01:22:19: set_activity_count end
Start:************************
query_command : SELECT COUNT(*) FROM EXPDW_ETE_TMP.TMP_D_CUS_HIST_LU
END:************************

d_cus_hist_ld 01/01/2021 01:22:20: Source     : TMP_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:22:20: Destination: DWH_D_CUS_HIST_LU
d_cus_hist_ld 01/01/2021 01:22:20: SQL Statistics:
d_cus_hist_ld 01/01/2021 01:22:20: NO OF ROWS INSERTED: 0
d_cus_hist_ld 01/01/2021 01:22:20: NO OF ROWS DELETED:  0
d_cus_hist_ld 01/01/2021 01:22:20: No OF ROWS UPDATED:  97
Start:************************
query_command : MERGE INTO EXPDW_ETE_DWH.DWH_C_AUDIT_LOG AS  A
                   USING (
    					 SELECT 1540 BATCH_ID 
    							,506 JOB_ID
    							,3 LEVEL
    					 ) AS TMP
    					 ON A.BATCH_ID = TMP.BATCH_ID
    					  AND A.JOB_ID = TMP.JOB_ID
    					  AND A.LEVEL = TMP.LEVEL
    					 WHEN MATCHED THEN UPDATE
            					 SET NUMBERS_OF_ROW_INSERTED = NUMBERS_OF_ROW_INSERTED+0
    					 		    ,NUMBERS_OF_ROW_UPDATED  = NUMBERS_OF_ROW_UPDATED+97
    					 		    ,NUMBERS_OF_ROW_DELETED  = NUMBERS_OF_ROW_DELETED+0
    					 		    ,NUMBERS_OF_ROW_REJECTED = NUMBERS_OF_ROW_REJECTED+0
									,AUDIT_TIMESTAMP = CURRENT_TIMESTAMP
    					 WHEN NOT MATCHED THEN INSERT
                   			   (	 BATCH_ID                
    									,JOB_ID                  
    									,JOB_NAME                
    									,BUSINESS_DATE 
                                        ,AUDIT_TIMESTAMP										
    									,SOURCE        
    									,SOURCE_COUNT            
    									,TARGET         
    									,NUMBERS_OF_ROW_INSERTED 
    									,NUMBERS_OF_ROW_UPDATED  
    									,NUMBERS_OF_ROW_DELETED  
    									,NUMBERS_OF_ROW_REJECTED
    									,LEVEL)
    						VALUES(  TMP.BATCH_ID     
    								,TMP.JOB_ID
    								,'d_cus_hist_ld'
    								,CAST('2020-12-30' AS DATE FORMAT 'YYYY-MM-DD')
									,CURRENT_TIMESTAMP
    								,'TMP_D_CUS_HIST_LU'
    								,        523
    								,'DWH_D_CUS_HIST_LU'
    								,0
    								,97
    								,0
    								,0
    								,TMP.LEVEL)
    							
END:************************

d_cus_hist_ld 01/01/2021 01:22:20: Setting bookmark value for the script in DWH_C_BATCH_LOG table
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG
                      SET BOOKMARK='AFTER_UPDATE_RCD_TMP_FLG'
					  ,JOB_ID=506
                      WHERE BATCH_ID=1540
                       AND JOB_NAME = 'd_cus_hist_ld'
					   AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
                     
END:************************



==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = AFTER_UPDATE_RCD_TMP_FLG  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:22:20: DWH_D_CUS_HIST_LU Load Complete
d_cus_hist_ld 01/01/2021 01:22:20: Collecting Statistics for DWH_D_CUS_HIST_LU
Start:************************
query_command : 
	COLLECT STATS COLUMN(CUS_HIST_KEY)
		,COLUMN(CUS_KEY, EFF_FROM_DT)
		,COLUMN(CUS_KEY)
		,COLUMN(CUS_ID)
		,COLUMN(EFF_FROM_DT)
		,COLUMN(RCD_CLOSE_FLG)
		,COLUMN(RCD_TMP_CLOSE_FLG)
	ON EXPDW_ETE_DWH.DWH_D_CUS_HIST_LU;	
	
END:************************

d_cus_hist_ld 01/01/2021 01:37:39: DWH_D_CUS_HIST_LU Statistics collected successfully
d_cus_hist_ld 01/01/2021 01:37:39: Setting bookmark value for the script in DWH_C_BATCH_LOG table
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG
                      SET BOOKMARK='DONE'
					  ,JOB_ID=506
                      WHERE BATCH_ID=1540
                       AND JOB_NAME = 'd_cus_hist_ld'
					   AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
                     
END:************************



==============================================================================================================================================
====================================================  RUNNING CODES FOR BOOKMARK = DONE  ================================================
==============================================================================================================================================


d_cus_hist_ld 01/01/2021 01:37:39: Script Successful
Start:************************
query_command : UPDATE EXPDW_ETE_DWH.DWH_C_BATCH_LOG 
                     SET      
                            END_TIMESTAMP = CURRENT_TIMESTAMP
                            ,STATUS='COMPLETE'
							,JOB_ID='506'
							,ERROR_DETAIL='COMPLETE'
							,BOOKMARK='COMPLETE'
                     WHERE BATCH_ID='1540'
							AND JOB_NAME='d_cus_hist_ld'
							AND START_TIMESTAMP='2021-01-01 01:06:21.230000'
END:************************

